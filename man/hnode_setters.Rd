% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/node_access.R
\name{hnode_setters}
\alias{h_args}
\alias{h_args<-}
\alias{h_cacher}
\alias{h_cacher<-}
\alias{h_cacher_ne}
\alias{h_delete}
\alias{h_delete<-}
\alias{h_effect}
\alias{h_effect<-}
\alias{h_effect_ne}
\alias{h_fail}
\alias{h_fail<-}
\alias{h_fail_ne}
\alias{h_fun}
\alias{h_fun<-}
\alias{h_fun_ne}
\alias{h_inode}
\alias{h_inode<-}
\alias{h_inode_ne}
\alias{h_pass}
\alias{h_pass<-}
\alias{h_pass_ne}
\alias{h_val}
\alias{h_val<-}
\alias{h_val_ne}
\alias{hnode_setters}
\title{Get and set elements of an hnode}
\usage{
h_fun(h)

h_val(h)

h_pass(h)

h_fail(h)

h_effect(h)

h_cacher(h)

h_inode(h)

h_fun_ne(h)

h_val_ne(h)

h_pass_ne(h)

h_fail_ne(h)

h_effect_ne(h)

h_cacher_ne(h)

h_args(h)

h_delete(h)

h_inode_ne(h)

h_fun(h) <- value

h_val(h) <- value

h_pass(h) <- value

h_fail(h) <- value

h_effect(h) <- value

h_cacher(h) <- value

h_fail(h) <- value

h_args(h) <- value

h_delete(h) <- value

h_inode(h) <- value
}
\arguments{
\item{h}{a function of the 'hnode' class}

\item{value}{right hand value for assignment}
}
\description{
The `h_*` functions return the object after evaluating it within the hnode
environment. For example,
}
\details{
```
h_fun <- function(h) { eval(formals(h)$.fun, environment(h)) }
```

The  `h_*_ne` functions return the object directly (they will normally be
expressions). The `ne` stands for 'no evaluation'.

```
h_fun_ne <- function(h) { formals(h)$.fun }
```

The `h_*_ne` family is mostly useless. I keep it around for testing.
}

